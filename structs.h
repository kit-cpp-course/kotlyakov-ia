#pragma once
/*
Структура точки на плоскости (координаты х и у вещественные)
*/
struct point {
	float x;	//координата х
	float y;	//координата у
public:
	point(float x, float y) :x(x), y(y) {};
	point() {};
};

/*
Структура диагонали (линии) между двумя точками.
Необходима для фиксирования новых отрезков, появляющихся в ходе тиангуляции
*/
struct diagonal {
	point a;	//точка 1
	point b;	//точка 2
public:
	diagonal(point a, point b) :a(a), b(b) {};
	diagonal():a(point()),b(point()) {};
};

/*
Структура точки с флагом принадлежности к монотонной цепочке.
Требуется для реализации алгоритма триангуляции, ввиду того, что
поведение программы меняется в зависимости от того, какой монотонной цепочке
(верхней или нижней) принаджежит та или иная вершина.

bool up = true, если вершина принадлежит верхней монотонной цепочке
bool up = false, если вершина принадлежит верхней монотонной цепочке
*/
struct flag_vertex {
	point a;	//точка
	bool up;	//флаг принажлежности к цепочке
public:
	flag_vertex(point a, bool up) :a(a), up(up) {};
	flag_vertex():a(point()), up(false) {};
};
